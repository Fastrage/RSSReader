//
//  FeedPresenter.swift
//  RSSReader
//
//  Created Олег Крылов on 03/08/2019.
//  Copyright © 2019 OlegKrylov. All rights reserved.
//
//  Template generated by Edward
//

import Foundation

// MARK: View -
protocol FeedViewProtocol: AnyObject {
func setupInitialState()
}

// MARK: Presenter -
protocol FeedPresenterProtocol: AnyObject {
	var view: FeedViewProtocol? { get set }
    func viewDidLoad()
    func numberOfRowsInSection() -> Int
    func itemForRow(at indexPath: IndexPath) -> Article
}

class FeedPresenter: FeedPresenterProtocol {
    
    
    
    
    
    weak var view: FeedViewProtocol?
    private let feedService: iFeedService
    private var articles: [Article] = []
    
    init() {
        feedService = FeedService()
    }
   
    func numberOfRowsInSection() -> Int {
       return self.articles.count
    }
    func itemForRow(at indexPath: IndexPath) -> Article {
        return self.articles[indexPath.row]
    }
    func sendArticles() -> [Article] {
        
        return self.articles
    }
    
    func viewDidLoad() {
        view?.setupInitialState()
        self.articles = feedService.getArticles()
    }
    



}


