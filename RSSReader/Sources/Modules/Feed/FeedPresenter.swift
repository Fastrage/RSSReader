//
//  FeedPresenter.swift
//  RSSReader
//
//  Created Олег Крылов on 03/08/2019.
//  Copyright © 2019 OlegKrylov. All rights reserved.
//
//  Template generated by Edward
//

import Foundation

// MARK: View -
protocol FeedViewProtocol: AnyObject {
    func setupInitialState()
    func showDetailView(with article: Article)
}

// MARK: Presenter -
protocol FeedPresenterProtocol: AnyObject {
	var view: FeedViewProtocol? { get set }
    //var router: FeedRouterProtocol { get }
    func viewDidLoad()
    func numberOfRowsInSection() -> Int
    func itemForRow(at indexPath: IndexPath) -> Article
    func didSelectRowAt(at indexPath: IndexPath)
}

final class FeedPresenter: FeedPresenterProtocol {

    weak var view: FeedViewProtocol?
    private let feedService: iFeedService
    private var articles: [Article] = []
    //var router: FeedRouterProtocol
    
    init() {
        feedService = FeedService()
//        router = FeedRouter(feedViewController: self.view as! FeedViewController)
        
    }
   
    func numberOfRowsInSection() -> Int {
       return self.articles.count
    }
    func itemForRow(at indexPath: IndexPath) -> Article {
        return self.articles[indexPath.row]
    }
    func sendArticles() -> [Article] {
        
        return self.articles
    }
    
    func didSelectRowAt(at indexPath: IndexPath) {
        let article = self.articles[indexPath.row]
        view?.showDetailView(with: article)
        
    }
    
    func viewDidLoad() {
        view?.setupInitialState()
        self.articles = feedService.getArticles()
    }
    



}


